server:
  port: 1001

spring:
  application:
    name: consumer01


eureka:
  client: # 客户端相关的配置
    service-url:
      #      defaultZone: http://eureka-server-001/eureka
      defaultZone: http://eureka7001.com:7001/eureka #指定注册地址

    register-with-eureka: true # 可以不往eureka注册
    fetch-registry: true # 拉取服务列表到本地
    registry-fetch-interval-seconds: 10 # 为了缓解服务列表脏读问题，时间越短 ，脏读越少，但是比较耗性能，就是每隔多久去取服务列表
  instance:
    hostname: localhost #应用名称，最好写主机
    instance-id: ${eureka.instance.hostname}:${spring.application.name}:${server.port}
    prefer-ip-address: true
    lease-expiration-duration-in-seconds: 10 #实例续约时间

ribbon:
  eager-load:
    enabled: true # ribbon如果只有它自己，肯定不能做负载均衡  ribbon需要去注册中心拉去服务列表 false是懒加载
  eureka:
    enabled: true
  http: # 我们使用ribbon用的RestTemplate发请求，java.net.HttpUrlConnection发的请求，很方便，但是不支持连接池
    client: # 发请求的工具很对 httpClient 它支持连接池 效率更好  如果你想改请求的工具，记得加这个依赖即可
      enabled: false

  okhttp:  # 这是请求工具，轻量级，移动端使用较多
    enabled: false

management:
  endpoints:
    web:
      exposure:
        include: '*'
