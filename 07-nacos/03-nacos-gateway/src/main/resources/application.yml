server:
  port: 80

spring:
  application:
    name: gateway

  cloud:
    nacos:
      discovery:
        server-addr: 47.98.252.249:8848 #往这个地址注册自己,不指定命名空间。会默认注册到public里面去，不指定会分组，会注册到default分组中去
        username: nacos
        password: nacos
        namespace: 791aacd4-29c3-4f85-92ab-5606c7cd108b #表示注册到这个命名空间
        service: nacos-gateway  #这个是服务名称，如果不写，默认取应用名称作为服务名称
        group: dev


    gateway:

      #   gateway 解决跨域问题
      globalcors: # 全局的跨域处理
        add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
              # 允许哪些网站的跨域请求
              #              - "http://localhost:8090"
            allowedMethods: "*"
            # 允许的跨域ajax的请求方式
            #              - "GET"
            #              - "POST"
            #              - "DELETE"
            #              - "PUT"
            #              - "OPTIONS"
            allowedHeaders: "*" # 允许在请求中携带的头信息
            allowCredentials: true # 是否允许携带cookie
            maxAge: 360000 # 这次跨域检测的有效期
      discovery:
        locator:
          enabled: true #设置为true 请求路径前可以添加微服务名称
          lower-case-service-id: true # 允许转为小写
      routes: #集合。
        - id: gateway-provider2  #ID：唯一标示，默认是一个UUID
#          uri: http://localhost:8001/  #uri:转发路径
          uri: lb://nacos-user-client-02
          predicates: #predicates: 条件，用于请求网关路径的匹配规则
            - Path=/client02/**
          filters:
          - StripPrefix=1

        - id: gateway-provider1  #ID：唯一标示，默认是一个UUID
            #          uri: http://localhost:8001/  #uri:转发路径
          uri: lb://nacos-user-client-01
          predicates: #predicates: 条件，用于请求网关路径的匹配规则
            - Path=/client01/**
          filters:
          - StripPrefix=1
      global-filter:
        load-balancer-client:
          enabled: true


#暴露所有的监控断端点
management:
  endpoints:
    web:
      exposure:
        include: '*'