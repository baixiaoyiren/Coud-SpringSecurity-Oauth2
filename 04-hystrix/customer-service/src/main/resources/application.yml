server:
  port: 5001



spring:
  application:
    name: customer-service


eureka:
  client: # 拉取服务列表到本地
    service-url:
      #      defaultZone: http://eureka-server-001/eureka
      defaultZone: http://eureka7001.com:7001/eureka #指定注册地址

    register-with-eureka: true # 可以不往eureka注册
    fetch-registry: true # 拉取服务列表到本地
    registry-fetch-interval-seconds: 10 # 为了缓解服务列表脏读问题，时间越短 ，脏读越少，但是比较耗性能，就是每隔多久去取服务列表
  instance:
    hostname: localhost #应用名称，最好写主机
    instance-id: ${eureka.instance.hostname}:${spring.application.name}:${server.port}
    prefer-ip-address: true
    lease-expiration-duration-in-seconds: 10 #实例续约时间


#feign 只是帮你去封装了远程调用的功能，底层还是ribbon，所以我们要去修改ribbon的超时时间去调整超时时间
ribbon:
  eureka:
    enabled: true
  ReadTimeout: 3000 # 给feign3s的超时时间
  ConnectTimeout: 3000 # 给feign3s的连接服务超时时间

feign:
  hystrix:
    enabled: true # 开启断路器
    command: #用于控制HystrixCommand的行为
      default:
        execution:
          isolation:
            strategy: THREAD #控制HystrixCommand的隔离策略，THREAD->线程池隔离策略(默认)，SEMAPHORE->信号量隔离策略
            thread:
              timeoutInMilliseconds: 1000 #配置HystrixCommand执行的超时时间，执行超过该时间会进行服务降级处理
              interruptOnTimeout: true #配置HystrixCommand执行超时的时候是否要中断
              interruptOnCancel: true #配置HystrixCommand执行被取消的时候是否要中断
            timeout:
              enabled: true #配置HystrixCommand的执行是否启用超时时间
            semaphore:
              maxConcurrentRequests: 10 #当使用信号量隔离策略时，用来控制并发量的大小，超过该并发量的请求会被拒绝
        fallback:
          enabled: true #用于控制是否启用服务降级
        circuitBreaker: #用于控制HystrixCircuitBreaker的行为
          enabled: true #用于控制断路器是否跟踪健康状况以及熔断请求
          requestVolumeThreshold: 20 #超过该请求数的请求会被拒绝
          forceOpen: false #强制打开断路器，拒绝所有请求
          forceClosed: false #强制关闭断路器，接收所有请求
        requestCache:
          enabled: true #用于控制是否开启请求缓存
    collapser: #用于控制HystrixCollapser的执行行为
      default:
        maxRequestsInBatch: 100 #控制一次合并请求合并的最大请求数
        timerDelayinMilliseconds: 10 #控制多少毫秒内的请求会被合并成一个
        requestCache:
          enabled: true #控制合并请求是否开启缓存
    threadpool: #用于控制HystrixCommand执行所在线程池的行为
      default:
        coreSize: 10 #线程池的核心线程数
        maximumSize: 10 #线程池的最大线程数，超过该线程数的请求会被拒绝
        maxQueueSize: -1 #用于设置线程池的最大队列大小，-1采用SynchronousQueue，其他正数采用LinkedBlockingQueue
        queueSizeRejectionThreshold: 5 #用于设置线程池队列的拒绝阀值，由于LinkedBlockingQueue不能动态改版大小，使用时需要用该参数来控制线程数


management:
  endpoints:
    web:
      exposure:
        include: '*'